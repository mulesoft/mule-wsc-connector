<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd">

    <munit:config name="wss-outgoing-test-cases">
        <munit:parameterizations>
            <munit:parameterization name="">
                <munit:parameters>
                    <munit:parameter propertyName="servicePort" value="8080"/>
                    <munit:parameter propertyName="soapVersion" value="SOAP11"/>
                    <munit:parameter propertyName="serviceHost" value="localhost"/>
                    <munit:parameter propertyName="urlPath" value=""/>
                    <munit:parameter propertyName="mtomEnabled" value="false"/>
                </munit:parameters>
            </munit:parameterization>
        </munit:parameterizations>
    </munit:config>

    <!-- Configs -->
    <wsc:config name="encrypt-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:encrypt-security-strategy>
                    <wsc:key-store-configuration keyStorePath="security/ssltest-cacerts.jks" password="changeit" alias="s1as" type="jks"/>
                    <wsc:encryption-algorithms-configuration encryptionSymAlgorithm="AES_128" encryptionDigestAlgorithm="SHA1">
                        <wsc:wss-part-adapters>
                            <wsc:wss-part namespace="http://service.soap.service.mule.org/" localname="echo" encode="CONTENT"/>
                        </wsc:wss-part-adapters>
                    </wsc:encryption-algorithms-configuration>
                </wsc:encrypt-security-strategy>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <wsc:config name="invalid-encrypt-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:encrypt-security-strategy>
                    <wsc:key-store-configuration keyStorePath="security/serverKeystore" password="mulepassword" alias="muleserver" type="jks"/>
                    <wsc:encryption-algorithms-configuration encryptionSymAlgorithm="AES_128" encryptionDigestAlgorithm="SHA1">
                        <wsc:wss-part-adapters>
                            <wsc:wss-part namespace="http://service.soap.service.mule.org/" localname="echo" encode="CONTENT"/>
                        </wsc:wss-part-adapters>
                    </wsc:encryption-algorithms-configuration>
                </wsc:encrypt-security-strategy>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <wsc:config name="sign-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:sign-security-strategy>
                    <wsc:key-store-configuration keyStorePath="security/clientKeystore" keyPassword="mulepassword" password="mulepassword" alias="muleclient" type="jks"/>
                    <wsc:sign-algorithm-configuration signatureDigestAlgorithm="SHA256"/>
                </wsc:sign-security-strategy>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <wsc:config name="invalid-sign-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:sign-security-strategy>
                    <wsc:key-store-configuration keyStorePath="security/serverKeystore" keyPassword="mulepassword" password="mulepassword" alias="muleserver" type="jks"/>
                    <wsc:sign-algorithm-configuration signatureDigestAlgorithm="SHA256"/>
                </wsc:sign-security-strategy>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <wsc:config name="timestamp-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:timestamp-security-strategy timeToLive="30"/>
                <wsc:encrypt-security-strategy>
                    <wsc:key-store-configuration keyStorePath="security/ssltest-cacerts.jks" password="changeit" alias="s1as" type="jks"/>
                    <wsc:encryption-algorithms-configuration encryptionSymAlgorithm="AES_128" encryptionDigestAlgorithm="SHA1">
                        <wsc:wss-part-adapters>
                            <wsc:wss-part namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" localname="Timestamp" encode="CONTENT"/>
                        </wsc:wss-part-adapters>
                    </wsc:encryption-algorithms-configuration>
                </wsc:encrypt-security-strategy>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <wsc:config name="username-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:username-token-security-strategy username="sa1s" password="changeit" addCreated="true" addNonce="true"/>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <wsc:config name="invalid-username-config">
        <wsc:connection wsdlLocation="http://${serviceHost}:${servicePort}/${urlPath}?wsdl" service="TestService" port="TestPort">
            <wsc:web-service-security>
                <wsc:username-token-security-strategy username="invalid" password="invalid" addCreated="true" addNonce="true"/>
            </wsc:web-service-security>
        </wsc:connection>
    </wsc:config>

    <!-- Tests -->

    <flow name="buildSecureRequest">
        <set-payload value="#[%dw 2.0
output application/xml
ns con http://service.soap.service.mule.org/
---
con#echo: {
    text: vars.text
}]" />
    </flow>

    <munit:test name="encryptRequest">
        <munit:execution>
            <set-variable variableName="text" value="encryptedRequest" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="encrypt-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-equals actual="#[payload.body.echoResponse.text]" expected="#['test response']"/>
        </munit:validation>
    </munit:test>

    <munit:test name="failToEncryptRequest" expectedErrorType="WSC:SOAP_FAULT">
        <munit:execution>
            <set-variable variableName="text" value="invalidEncryptedRequest" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="invalid-encrypt-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
    </munit:test>

    <munit:test name="signRequest">
        <munit:execution>
            <set-variable variableName="text" value="signedRequest" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="sign-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-equals actual="#[payload.body.echoResponse.text]" expected="#['test response']"/>
        </munit:validation>
    </munit:test>

    <munit:test name="failToSignRequest" expectedErrorType="WSC:SOAP_FAULT">
        <munit:execution>
            <set-variable variableName="text" value="fail" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="invalid-sign-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
    </munit:test>

    <munit:test name="timestampRequest">
        <munit:execution>
            <set-variable variableName="text" value="timestamp" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="timestamp-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
    </munit:test>

    <munit:test name="usernameRequest">
        <munit:execution>
            <set-variable variableName="text" value="timestamp" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="username-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
    </munit:test>

    <munit:test name="invalidUsernameRequest" expectedErrorType="WSC:SOAP_FAULT">
        <munit:execution>
            <set-variable variableName="text" value="timestamp" />
            <flow-ref name="buildSecureRequest" />
            <wsc:consume config-ref="invalid-username-config" operation="echo">
                <wsc:message>
                    <wsc:body>#[payload]</wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
    </munit:test>
</mule>