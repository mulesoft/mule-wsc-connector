<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd">

    <munit:config name="fault-test-cases">
        <munit:parameterizations>
            <munit:parameterization name="SOAP11">
                <munit:parameters>
                    <munit:parameter propertyName="soapVersion" value="SOAP11"/>
                    <munit:parameter propertyName="wsPort" value="${WS_SOAP11_PORT}"/>
                    <munit:parameter propertyName="mtomEnabled" value="false"/>
                    <munit:parameter propertyName="config" value="default-config" />
                </munit:parameters>
            </munit:parameterization>
            <munit:parameterization name="SOAP12">
                <munit:parameters>
                    <munit:parameter propertyName="soapVersion" value="SOAP12"/>
                    <munit:parameter propertyName="wsPort" value="${WS_SOAP12_PORT}"/>
                    <munit:parameter propertyName="mtomEnabled" value="false"/>
                    <munit:parameter propertyName="config" value="default-config" />
                </munit:parameters>
            </munit:parameterization>
        </munit:parameterizations>
    </munit:config>

    <!-- Configs -->

    <!-- Tests -->
    <munit:test name="failAndCheckErrorMessage" description="Consumes an operation that throws a SOAP Fault and expects a Soap Fault Exception">
        <munit:execution>
            <try>
                <wsc:consume config-ref="${config}" operation="fail">
                    <wsc:message>
                        <wsc:body>
                            #[
                            %dw 2.0
                            output application/xml
                            ns con http://service.soap.service.mule.org/
                            ---
                            con#fail: {}
                            ]
                        </wsc:body>
                    </wsc:message>
                </wsc:consume>
                <error-handler>
                    <mule:on-error-continue enableNotifications="true" type="WSC:SOAP_FAULT">
                        <set-payload value="#[error.errorMessage.payload.detail]"/>
                    </mule:on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-equals actual="#[payload]" expected="#['&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;detail&gt;&lt;text&gt;Fail Message&lt;/text&gt;&lt;/detail&gt;']"/>
        </munit:validation>
    </munit:test>

    <munit:test name="noOperation" description="Consumes an operation that does not exist and throws a SOAP Fault because of it and asserts the thrown exception" expectedErrorType="WSC:BAD_REQUEST">
        <munit:execution>
            <wsc:consume config-ref="${config}" operation="noOperation">
                <wsc:message>
                    <wsc:body>
                        #[
                        %dw 2.0
                        output application/xml
                        ns con http://service.soap.service.mule.org/
                        ---
                        con#noOperation: {}
                        ]
                    </wsc:body>
                </wsc:message>
            </wsc:consume>
        </munit:execution>
    </munit:test>

    <munit:test name="echoBodyIsNotValidXml" description="Consumes an operation with a body that is not a valid XML">
        <munit:execution>
            <try>
                <wsc:consume config-ref="${config}" operation="fail">
                    <wsc:message>
                        <wsc:body>
                            #['not a valid XML file']
                        </wsc:body>
                    </wsc:message>
                </wsc:consume>
                <error-handler>
                    <mule:on-error-continue enableNotifications="true" type="WSC:BAD_REQUEST">
                        <set-payload value="#[error.detailedDescription]"/>
                    </mule:on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-equals actual="#[payload]" expected="#['Error consuming the operation [fail], the request body is not a valid XML']"/>
        </munit:validation>
    </munit:test>
</mule>