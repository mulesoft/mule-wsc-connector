<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.mule.extensions</groupId>
        <artifactId>mule-core-modules-parent</artifactId>
        <version>1.1.9</version>
        <relativePath></relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.mule.connectors</groupId>
    <artifactId>mule-wsc-connector</artifactId>
    <packaging>mule-extension</packaging>
    <version>1.12.0-SNAPSHOT</version>


    <name>Web Service Consumer Connector</name>
    <description>A Mule connector that provides functionality for dynamically consuming SOAP web services</description>

    <properties>
        <!-- core dependencies internals-->
        <muleSdkApiVersion>0.8.2</muleSdkApiVersion>
        <mule.http.connector.version>1.10.3</mule.http.connector.version>
        <soap.engine.version>1.10.0</soap.engine.version>
        <wsdl.parser.version>1.4.9</wsdl.parser.version>
        <!-- core dependencies externals-->
        <commons.lang.version>3.16.0</commons.lang.version>
        <spring-expression.version>5.3.39</spring-expression.version>
        <jakarta.xml.soap-api>2.0.1</jakarta.xml.soap-api>
        <saaj-impl.version>1.5.3</saaj-impl.version>
        <saaj-api>1.3.5</saaj-api>

        <!-- tests dependencies -->
        <activation.version>1.1.1</activation.version>
        <javax.jaxws-api.version>2.3.1</javax.jaxws-api.version>
        <javax.jws-api.version>1.1</javax.jws-api.version>
        <xmlUnitVersion>1.6</xmlUnitVersion>
        <jsonassert.version>1.5.1</jsonassert.version>
        <mule.file.connector.version>1.5.2</mule.file.connector.version>
        <mule.wss.module.version>1.2.3</mule.wss.module.version>
        <easy-random-core>4.3.0</easy-random-core>

        <!-- Remove when a new parent version with MTF is available -->
        <!-- MTF dependencies -->
        <mtf.tools.version>1.2.0</mtf.tools.version>
        <munit.extensions.maven.plugin.version>1.4.0</munit.extensions.maven.plugin.version>
        <minVersion>4.3.0</minVersion>
        <!-- MTF properties -->
        <munit.version>3.4.0</munit.version>
        <munit.input.directory>src/test/munit</munit.input.directory>
        <munit.output.directory>${basedir}/target/test-mule/munit</munit.output.directory>
        <mavenResourcesVersion>3.3.1</mavenResourcesVersion>

        <!-- Plugin dependencies -->
        <apache.santuario.xmlsec.version>3.0.4</apache.santuario.xmlsec.version>
        <org.slf4j.version>2.0.16</org.slf4j.version>
        <docker.maven.plugin.version>0.45.0</docker.maven.plugin.version>
        <jacoco.version>0.8.12</jacoco.version>
        <!-- Plugin properties -->
        <formatterConfigPath>formatter.xml</formatterConfigPath>
        <docker.skip>${skipTests}</docker.skip>
        <docker.soapui.container.project.folder>${env.docker.soapui.container.project.folder}</docker.soapui.container.project.folder>
        <docker.soapui.container.user.home.url>file:/home/soapui</docker.soapui.container.user.home.url>
        <docker.soapui.container.user.home.path>/home/soapui</docker.soapui.container.user.home.path>
        <docker.soapui.container.project.home>${docker.soapui.container.user.home.path}/${docker.soapui.container.project.folder}/</docker.soapui.container.project.home>
        <config.ref.name.WSS_Inbound>${env.config.name.WSS_Inbound}</config.ref.name.WSS_Inbound>
        <config.ref.name.username-config>${env.config.name.username-config}</config.ref.name.username-config>
        <config.ref.name.invalid-username-config>${env.config.name.invalid-username-config}</config.ref.name.invalid-username-config>
        <config.ref.name.verify-config>${env.config.name.verify-config}</config.ref.name.verify-config>
        <config.ref.name.sign-config>${env.config.name.sign-config}</config.ref.name.sign-config>
        <config.ref.name.invalid-sign-config>${env.config.name.invalid-sign-config}</config.ref.name.invalid-sign-config>
        <config.ref.name.sign-mtom-config>${env.config.name.sign-mtom-config}</config.ref.name.sign-mtom-config>
        <config.ref.name.sign-encrypt-config>${env.config.name.sign-encrypt-config}</config.ref.name.sign-encrypt-config>
        <config.ref.name.encrypt-config>${env.config.name.encrypt-config}</config.ref.name.encrypt-config>
        <config.ref.name.invalid-encrypt-config>${env.config.name.invalid-encrypt-config}</config.ref.name.invalid-encrypt-config>
        <config.ref.name.decrypt-config>${env.config.name.decrypt-config}</config.ref.name.decrypt-config>
        <config.ref.name.timestamp-config>${env.config.name.timestamp-config}</config.ref.name.timestamp-config>
        <config.ref.name.security-header-order-default-config>${env.config.name.security-header-order-default-config}</config.ref.name.security-header-order-default-config>
        <config.ref.name.security-header-timestamp-first-config>${env.config.name.security-header-timestamp-first-config}</config.ref.name.security-header-timestamp-first-config>
        <config.ref.name.security-header-timestamp-last-config>${env.config.name.security-header-timestamp-last-config}</config.ref.name.security-header-timestamp-last-config>
        <config.ref.name.decryptAndTimestampOnResponse-config>${env.config.name.decryptAndTimestampOnResponse-config}</config.ref.name.decryptAndTimestampOnResponse-config>
        <config.ref.name.decryptOnResponse-config>${env.config.name.decryptOnResponse-config}</config.ref.name.decryptOnResponse-config>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.santuario</groupId>
            <artifactId>xmlsec</artifactId>
            <version>${apache.santuario.xmlsec.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-service-http-api</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-soap-engine</artifactId>
            <version>${soap.engine.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-expression</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.santuario</groupId>
                    <artifactId>xmlsec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mule.sdk</groupId>
            <artifactId>mule-sdk-api</artifactId>
            <version>${muleSdkApiVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-http-connector</artifactId>
            <version>${mule.http.connector.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.wsdl</groupId>
            <artifactId>mule-wsdl-parser</artifactId>
            <version>${wsdl.parser.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mule.runtime</groupId>
                    <artifactId>mule-metadata-model-xml</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring-expression.version}</version>
        </dependency>

        <!-- Common Dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.soap</groupId>
            <artifactId>jakarta.xml.soap-api</artifactId>
            <version>${jakarta.xml.soap-api}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.messaging.saaj</groupId>
            <artifactId>saaj-impl</artifactId>
            <version>${saaj-impl.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.soap</groupId>
            <artifactId>saaj-api</artifactId>
            <version>${saaj-api}</version>
        </dependency>

        <!-- Test Dependencies -->

        <dependency>
            <groupId>org.mule.runtime</groupId>
            <artifactId>mule-module-service</artifactId>
            <version>${mule.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>${xmlUnitVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>${jsonassert.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-http</artifactId>
            <version>${muleHttpServiceVersion}</version>
            <scope>test</scope>
            <classifier>mule-service</classifier>
        </dependency>
        <dependency>
            <groupId>org.mule.services</groupId>
            <artifactId>mule-service-scheduler</artifactId>
            <version>${muleSchedulerServiceVersion}</version>
            <classifier>mule-service</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.tests</groupId>
            <artifactId>mule-tests-functional</artifactId>
            <version>${mule.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>${activation.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
            <version>${javax.jaxws-api.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.jws</groupId>
            <artifactId>javax.jws-api</artifactId>
            <version>${javax.jws-api.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jeasy</groupId>
            <artifactId>easy-random-core</artifactId>
            <version>${easy-random-core}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mulesoft.modules</groupId>
            <artifactId>mule-wss-module</artifactId>
            <version>${mule.wss.module.version}</version>
            <classifier>mule-plugin</classifier>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcprov-jdk15on</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule.connectors</groupId>
            <artifactId>mule-file-connector</artifactId>
            <version>${mule.file.connector.version}</version>
            <classifier>mule-plugin</classifier>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.santuario</groupId>
                <artifactId>xmlsec</artifactId>
                <version>${apache.santuario.xmlsec.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <downloadUrl>http://www.mulesoft.org/display/MULE/Download</downloadUrl>
        <repository>
            <id>mule-releases</id>
            <name>Mule Release Repository</name>
            <url>https://repository-master.mulesoft.org/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>mule-snapshots</id>
            <name>Mule Snapshot Repository</name>
            <url>https://repository-master.mulesoft.org/nexus/content/repositories/snapshots</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>mule</id>
            <name>Mule Repository</name>
            <url>https://repository.mulesoft.org/nexus/content/repositories/public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>mule-plugin</id>
            <name>Mule Repository</name>
            <url>https://repository.mulesoft.org/nexus/content/repositories/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/${docker.soapui.container.project.folder}/**</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/${docker.soapui.container.project.folder}/**</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${mavenResourcesVersion}</version>
                <executions>
                    <execution>
                        <id>copy-munit-resources</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${munit.output.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${munit.input.directory}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mulesoft.munit</groupId>
                <artifactId>munit-extensions-maven-plugin</artifactId>
                <version>${munit.extensions.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                    </execution>
                </executions>
                <configuration>
                    <argLines>
                        <argLine>
                            -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${session.executionRootDirectory}/target/jacoco.exec
                        </argLine>
                    </argLines>
                    <runtimeConfiguration>
                        <discoverRuntimes>
                            <product>EE</product>
                            <minMuleVersion>${minVersion}</minMuleVersion>
                            <includeSnapshots>false</includeSnapshots>
                        </discoverRuntimes>
                    </runtimeConfiguration>
                    <environmentVariables>
                        <WS_SOAP11_PORT>${soap.host.port}</WS_SOAP11_PORT>
                        <WS_SOAP11_SSL_PORT>${soap.host.port.ssl}</WS_SOAP11_SSL_PORT>
                        <WS_SOAP12_PORT>${soap12.host.port}</WS_SOAP12_PORT>
                    </environmentVariables>
                    <dynamicPorts>
                        <dynamicPort>http.port</dynamicPort>
                    </dynamicPorts>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.mulesoft.munit</groupId>
                        <artifactId>munit-runner</artifactId>
                        <version>${munit.version}</version>
                        <classifier>mule-plugin</classifier>
                    </dependency>
                    <dependency>
                        <groupId>com.mulesoft.munit</groupId>
                        <artifactId>munit-tools</artifactId>
                        <version>${munit.version}</version>
                        <classifier>mule-plugin</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.mule.connectors</groupId>
                        <artifactId>mule-http-connector</artifactId>
                        <version>${mule.http.connector.version}</version>
                        <classifier>mule-plugin</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.mule.connectors</groupId>
                        <artifactId>mule-soap-engine</artifactId>
                        <version>${soap.engine.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.mulesoft.munit</groupId>
                        <artifactId>mtf-tools</artifactId>
                        <version>${mtf.tools.version}</version>
                        <classifier>mule-plugin</classifier>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <alias>ws-simple</alias>
                            <run>
                                <platform>linux/amd64</platform>
                                <env>
                                    <MOCK_SERVICE_NAME>MUnitServiceMock</MOCK_SERVICE_NAME>
                                    <PROJECT>${docker.soapui.container.project.home}simple-service-soapui-project.xml
                                    </PROJECT>
                                    <PROJECT_SETTINGS>${docker.soapui.container.project.home}soapui-settings.xml
                                    </PROJECT_SETTINGS>
                                </env>
                                <ports>
                                    <port>soap.host.port:8080</port>
                                    <port>soap.host.port.ssl:8443</port>
                                </ports>
                                <log>
                                    <enabled>false</enabled>
                                </log>
                                <!--Workaround for avoiding name collisions with zombie containers left from failed executions-->
                                <!--or parallel executions on same agent-->
                                <containerNamePattern>%n-%i-%t</containerNamePattern>
                            </run>
                        </image>
                        <image>
                            <alias>ws-simple-soap12</alias>
                            <run>
                                <platform>linux/amd64</platform>
                                <env>
                                    <MOCK_SERVICE_NAME>MUnitServiceMock</MOCK_SERVICE_NAME>
                                    <PROJECT>
                                        ${docker.soapui.container.project.home}simple-service-soap12-soapui-project.xml
                                    </PROJECT>
                                    <PROJECT_SETTINGS>${docker.soapui.container.project.home}soapui-settings.xml
                                    </PROJECT_SETTINGS>
                                </env>
                                <ports>
                                    <port>soap12.host.port:8080</port>
                                </ports>
                                <log>
                                    <enabled>false</enabled>
                                </log>
                                <!--Workaround for avoiding name collisions with zombie containers left from failed executions-->
                                <!--or parallel executions on same agent-->
                                <containerNamePattern>%n-%i-%t</containerNamePattern>
                            </run>
                        </image>
                    </images>
                    <verbose>true</verbose>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                        <version>${org.slf4j.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                        <version>${org.slf4j.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <showLogs>false</showLogs>
                            <logStdout>false</logStdout>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-windows</id>
            <activation>
                <os>
                    <family>windows</family>
                    <name>windows server 2016</name>
                    <version>10.0</version>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <docker.soapui.container.user.home.url>file:///C:/Users/Administrator
                </docker.soapui.container.user.home.url>
                <docker.soapui.container.user.home.path>C:/Users/Administrator</docker.soapui.container.user.home.path>
                <docker.soapui.container.project.home>C:\Users\Administrator\${docker.soapui.container.project.folder}\
                </docker.soapui.container.project.home>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.maven.plugin.version}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>ws-simple</alias>
                                    <name>artifacts.msap.io/mulesoft-onprem/windows-soapui-for-wsc</name>
                                </image>
                                <image>
                                    <alias>ws-simple-soap12</alias>
                                    <name>artifacts.msap.io/mulesoft-onprem/windows-soapui-for-wsc</name>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-unix</id>
            <activation>
                <os>
                    <family>!windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.maven.plugin.version}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>ws-simple</alias>
                                    <name>ws-simple</name>
                                    <build>
                                        <contextDir>${project.build.testOutputDirectory}</contextDir>
                                        <dockerFile>${project.build.testOutputDirectory}/Dockerfile</dockerFile>
                                    </build>
                                </image>
                                <image>
                                    <alias>ws-simple-soap12</alias>
                                    <name>ws-simple-soap12</name>
                                    <build>
                                        <contextDir>${project.build.testOutputDirectory}</contextDir>
                                        <dockerFile>${project.build.testOutputDirectory}/Dockerfile</dockerFile>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>default-config</id>
            <activation>
                <property>
                    <name>!mule.security.model</name> <!-- if mule.security.model does not exist -->
                </property>
            </activation>
            <properties>
                <env.docker.soapui.container.project.folder>soapui-prj</env.docker.soapui.container.project.folder>
                <env.config.name.WSS_Inbound>WSS_Inbound</env.config.name.WSS_Inbound>
                <env.config.name.username-config>username-config</env.config.name.username-config>
                <env.config.name.invalid-username-config>invalid-username-config</env.config.name.invalid-username-config>
                <env.config.name.verify-config>verify-config</env.config.name.verify-config>
                <env.config.name.sign-config>sign-config</env.config.name.sign-config>
                <env.config.name.invalid-sign-config>invalid-sign-config</env.config.name.invalid-sign-config>
                <env.config.name.sign-mtom-config>sign-mtom-config</env.config.name.sign-mtom-config>
                <env.config.name.sign-encrypt-config>sign-encrypt-config</env.config.name.sign-encrypt-config>
                <env.config.name.encrypt-config>encrypt-config</env.config.name.encrypt-config>
                <env.config.name.invalid-encrypt-config>invalid-encrypt-config</env.config.name.invalid-encrypt-config>
                <env.config.name.decrypt-config>decrypt-config</env.config.name.decrypt-config>
                <env.config.name.timestamp-config>timestamp-config</env.config.name.timestamp-config>
                <env.config.name.security-header-order-default-config>security-header-order-default-config</env.config.name.security-header-order-default-config>
                <env.config.name.security-header-timestamp-first-config>security-header-timestamp-first-config</env.config.name.security-header-timestamp-first-config>
                <env.config.name.security-header-timestamp-last-config>security-header-timestamp-last-config</env.config.name.security-header-timestamp-last-config>
                <env.config.name.decryptAndTimestampOnResponse-config>decryptAndTimestampOnResponse-config</env.config.name.decryptAndTimestampOnResponse-config>
                <env.config.name.decryptOnResponse-config>decryptOnResponse-config</env.config.name.decryptOnResponse-config>
            </properties>
        </profile>
        <profile>
            <id>fips-config</id>
            <activation>
                <property>
                    <name>mule.security.model</name>
                    <value>fips140-2</value> <!-- if mule.security.model == fips140-2 -->
                </property>
            </activation>
            <properties>
                <env.docker.soapui.container.project.folder>soapui-prj-fips</env.docker.soapui.container.project.folder>
                <env.config.name.WSS_Inbound>WSS_Inbound-fips</env.config.name.WSS_Inbound>
                <env.config.name.username-config>username-config-fips</env.config.name.username-config>
                <env.config.name.invalid-username-config>invalid-username-config-fips</env.config.name.invalid-username-config>
                <env.config.name.verify-config>verify-config-fips</env.config.name.verify-config>
                <env.config.name.sign-config>sign-config-fips</env.config.name.sign-config>
                <env.config.name.invalid-sign-config>invalid-sign-config-fips</env.config.name.invalid-sign-config>
                <env.config.name.sign-mtom-config>sign-mtom-config-fips</env.config.name.sign-mtom-config>
                <env.config.name.sign-encrypt-config>sign-encrypt-config-fips</env.config.name.sign-encrypt-config>
                <env.config.name.encrypt-config>encrypt-config-fips</env.config.name.encrypt-config>
                <env.config.name.invalid-encrypt-config>invalid-encrypt-config-fips</env.config.name.invalid-encrypt-config>
                <env.config.name.decrypt-config>decrypt-config-fips</env.config.name.decrypt-config>
                <env.config.name.timestamp-config>timestamp-config-fips</env.config.name.timestamp-config>
                <env.config.name.security-header-order-default-config>security-header-order-default-config-fips</env.config.name.security-header-order-default-config>
                <env.config.name.security-header-timestamp-first-config>security-header-timestamp-first-config-fips</env.config.name.security-header-timestamp-first-config>
                <env.config.name.security-header-timestamp-last-config>security-header-timestamp-last-config-fips</env.config.name.security-header-timestamp-last-config>
                <env.config.name.decryptAndTimestampOnResponse-config>decryptAndTimestampOnResponse-config-fips</env.config.name.decryptAndTimestampOnResponse-config>
                <env.config.name.decryptOnResponse-config>decryptOnResponse-config-fips</env.config.name.decryptOnResponse-config>
            </properties>
        </profile>
    </profiles>
</project>
